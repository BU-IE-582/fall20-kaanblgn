data$Consumption = as.numeric(gsub(",",".",data$Consumption,fixed = T))
data_clean = data%>%transmute(Date=lubridate::dmy(Date),Hour = as.numeric(substr(Hour,1,2)),Consumption)
summary(data_clean)
data_clean%>%filter(Consumption==0)
data_clean%>%group_by(Date)%>%summarise(n=length(unique(Hour)))%>%ungroup()%>%filter(n!=24)
# make NA 2016-03-27 because of save light time.
setDT(data_clean)
data_clean[Date=="2016-03-27",Hour:=c(0:23)]
data_clean[Date=="2016-03-27",Consumption:=NA]
summary(data_clean)
ggplot(data_clean)+geom_line(aes(x=lubridate::as_datetime(Date)+lubridate::hours(Hour),y=Consumption))+
theme_bw()+labs(x="DateTime")
source('~/GitHub/final/mil_classifier.r', echo=TRUE)
source('~/GitHub/final/mil_classifier.r', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("Musk1.csv", header = TRUE)
setwd("~/GitHub/final")
data = read.csv("Musk1.csv", header = TRUE)
View(data)
data = read.csv("Musk1.csv", header = None)
data = read.table("Musk1.csv", header = None)
data = read.table("Musk1.csv")
View(data)
data = read.table("Musk1.csv", sep = ",")
View(data)
library(milr)
install.packages("milr")
library(milr)
library(milr)
data = read.table("Musk1.csv", sep = ",")
dataName <- "MIL-Data-2002-Musk-Corel-Trec9.tgz"
dataUrl <- "http://www.cs.columbia.edu/~andrews/mil/data/"
setwd("~/GitHub/final")
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>>%
`[`(j = V1 := NULL) %>>% `[`(j = lapply(.SD, as.numeric)) %>>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>>%
`[`(j = V1 := NULL) %>>% `[`(j = lapply(.SD, as.numeric)) %>>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
library(milr)
library(data.table)
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>>%
`[`(j = V1 := NULL) %>>% `[`(j = lapply(.SD, as.numeric)) %>>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>%
`[`(j = V1 := NULL) %>% `[`(j = lapply(.SD, as.numeric)) %>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE)
View(MUSK1)
data = read.table("Musk1.csv", sep = ",")
View(data)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>>%
`[`(j = V1 := NULL) %>>% `[`(j = lapply(.SD, as.numeric)) %>>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>%
`[`(j = V1 := NULL) %>% `[`(j = lapply(.SD, as.numeric)) %>>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>%
`[`(j = V1 := NULL) %>% `[`(j = lapply(.SD, as.numeric)) %>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
X <- paste0("V", 1:(ncol(MUSK1) - 2), collapse = "+") %>%
(paste("~", .)) %>% as.formula %>% model.matrix(MUSK1) %>% `[`( , -1L)
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>%
`[`(j = V1 := NULL) %>% `[`(j = lapply(.SD, as.numeric)) %>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
X() <- paste0("V", 1:(ncol(MUSK1) - 2), collapse = "+") %>%
(paste("~", .)) %>% as.formula %>% model.matrix(MUSK1) %>% `[`( , -1L)
#data = read.table("Musk1.csv", sep = ",")
MUSK1 <- fread("musk1norm.svm", header = FALSE) %>%
`[`(j = lapply(.SD, function(x) gsub("\\d+:(.*)", "\\1", x))) %>%
`[`(j = c("bag", "label") := tstrsplit(V1, ":")) %>%
`[`(j = V1 := NULL) %>% `[`(j = lapply(.SD, as.numeric)) %>%
`[`(j = `:=`(bag = bag + 1, label = (label + 1)/2)) %>%
setnames(paste0("V", 2:(ncol(.)-1)), paste0("V", 1:(ncol(.)-2))) %>%
`[`(j = paste0("V", 1:(ncol(.)-2)) := lapply(.SD, scale),
.SDcols = paste0("V", 1:(ncol(.)-2)))
X <- paste0("V", 1:(ncol(MUSK1()) - 2), collapse = "+") %>%
(paste("~", .)) %>% as.formula %>% model.matrix(MUSK1) %>% `[`( , -1L)
data = read.table("Musk1.csv", sep = ",")
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
data = read.table("Musk1.csv", sep = ",")
softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
control = list(maxit = 5000))
View(data)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
#data = read.table("Musk1.csv", sep = ",")
#softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
#                       control = list(maxit = 5000))
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
View(trainData)
#data = read.table("Musk1.csv", sep = ",")
#softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
#                       control = list(maxit = 5000))
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
milrFit_EST <- milr(trainData$Z, trainData$X, trainData$ID, lambda = 1e-7)
View(milrFit_EST)
#data = read.table("Musk1.csv", sep = ",")
#softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
#                       control = list(maxit = 5000))
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
milrFit_EST <- milr(trainData$Z, trainData$X, trainData$ID, lambda = 1e-7)
summary(milrFit_EST)
#data = read.table("Musk1.csv", sep = ",")
#softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
#                       control = list(maxit = 5000))
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
milrFit_EST <- milr(trainData$Z, trainData$X, trainData$ID, lambda = 1e-7)
summary(milrFit_EST)
coef(milrFit_EST)
#data = read.table("Musk1.csv", sep = ",")
#softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
#                       control = list(maxit = 5000))
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
milrFit_EST <- milr(trainData$Z, trainData$X, trainData$ID, lambda = 1e-7)
summary(milrFit_EST)
coef(milrFit_EST)
fitted(milrFit_EST, type = "bag")
#data = read.table("Musk1.csv", sep = ",")
#softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
#                       control = list(maxit = 5000))
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
milrFit_EST <- milr(trainData$Z, trainData$X, trainData$ID, lambda = 1e-7)
summary(milrFit_EST)
coef(milrFit_EST)
fitted(milrFit_EST, type = "bag")
table(DATA = instanceResponse, FITTED = fitted(milrFit_EST, type = "bag"))
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
softmaxFit_0 <- softmax(data$label, X, data$bag, alpha = 0,
control = list(maxit = 5000))
View(data)
x = as.matrix(data %>% select(-V1, -V2))
View(x)
data = read.table("Musk1.csv", sep = ",")
softmaxFit_0 <- softmax(y = data$V1,
x = as.matrix(data %>% select(-V1, -V2)),
data$V2, alpha = -1,
control = list(maxit = 5000))
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
data_training_data <- data[data_train_ind, ]
data_test_data     <- data[data_train_ind, ]
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
data_training_data <- data[data_train_ind, ]
data_test_data     <- data[-data_train_ind, ]
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
data_training_data <- data[data_train_ind, ]
data_test_data     <- data[-data_train_ind, ]
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
training_data <- data[data_train_ind, ]
test_data     <- data[-data_train_ind, ]
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
training_data <- data[data_train_ind, ]
test_data     <- data[-data_train_ind, ]
milr_result <- milr(training_data$V1, x = as.matrix(training_data %>% select(-v1,-v2)), training_data$V2)
milr_result <- milr(training_data$V1, x = as.matrix(training_data %>% select(-v1,-v2)), training_data$V2)
milr_result <- milr(training_data$v1, x = as.matrix(training_data %>% select(-v1,-v2)), training_data$V2)
View(training_data)
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
training_data <- data[data_train_ind, ]
test_data     <- data[-data_train_ind, ]
milr_result <- milr(training_data$V1, x = as.matrix(training_data %>% select(-V1,-V2)), training_data$V2)
milr_result <- milr(training_data$V1,
x = as.matrix(training_data %>% select(-V1,-V2)),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
milr_result <- milr(training_data$V1,
x = as.matrix(training_data %>% select(-V1,-V2)),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
coef(milr_result)
fitted(milr_result)
fitted(milr_result, type = "instance")
training_data <- as.numeric(training_data)
test_data <- as.numeric(test_data)
training_data <- as.numeric(as.factor(training_data))
test_data <- as.numeric(as.factor(test_data))
milr_result <- milr(training_data$V1,
x = as.matrix(training_data %>% select(-V1,-V2)),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
milr_result <- milr(training_data$V1,
x = training_data %>% select(-V1,-V2),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
milr_result <- milr(training_data$V1,
x <- training_data %>% select(-V1,-V2),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
training_data <- data[data_train_ind, ]
test_data     <- data[-data_train_ind, ]
milr_result <- milr(training_data$V1,
x = as.matrix(training_data %>% select(-V1,-V2)),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
coef(milr_result)
fitted(milr_result)
fitted(milr_result, type = "instance")
milr_result <- milr(training_data$V1,
x = as.matrix(training_data %>% select(-V1,-V2)),
training_data$V2,
lambda = 0,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
knitr::opts_chunk$set(echo = TRUE)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
training_data <- data[data_train_ind, ]
test_data     <- data[-data_train_ind, ]
milr_result <- milr(training_data$V1,
x = as.matrix(training_data %>% select(-V1)),
training_data$V2,
lambda = -1,
numLambda = 20,
lambdaCriterion = "BIC",
nfold = 10,
maxit = 500)
coef(milr_result)
fitted(milr_result)
fitted(milr_result, type = "instance")
milr_results <- milr(y = data$V1,
x = data,
bag = data$V2,
lambda = 0,
maxit = 500 )
milr_results <- milr(y = data$V1,
x = data,
bag = data$V2,
lambda = -1,
nfold = 10,
maxit = 500)
milr_results <- milr(y = data$V1,
x = data,
bag = data$V2,
lambda = -1,
nfold = 10,
maxit = 500)
summary(milrFit_EST)
summary(milr_result)
milr_results <- milr(y = data$V1,
x = data,
bag = data$V2,
lambda = 1e-7,
nfold = 10,
maxit = 500)
summary(milr_result)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
library(milr)
library(pipeR)
set.seed(99)
# set the size of dataset
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
colnames(trainData$X) <- paste0("X", 1:ncol(trainData$X))
(instanceResponse <- as.numeric(with(trainData, tapply(Z, ID, any))))
set.seed(99)
# set the size of dataset
numOfBag <- 30
numOfInstsInBag <- 3
# set true coefficients: beta_0, beta_1, beta_2, beta_3
trueCoefs <- c(-2, -1, 2, 0.5)
trainData <- DGP(numOfBag, numOfInstsInBag, trueCoefs)
View(trainData)
view(X)
data = read.table("Musk1.csv", sep = ",")
data = read.table("Musk1.csv", sep = ",")
data2 <- data
pca <- princomp(data2, cor=T)
View(pca)
summary(pca, loadings=T)
head(pca$contrib)
library(milr)
library(data.table)
library(magrittr)
library(dplyr)
library(pipeR)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
data2.n <- as.data.frame(lapply(data2[,2:168], normalize))
View(data2.n)
data = read.table("Musk1.csv", sep = ",")
data2 <- data
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
data2.n <- as.data.frame(lapply(data2[,2:168], normalize))
## 75% of the sample size
data_size <- floor((2/3) * nrow(data2))
## set the seed to make your partition reproducible
set.seed(123)
data_train_ind <- sample(seq_len(nrow(data2)), size = data_size)
train_data <- data[data_train_ind, ]
test_data     <- data[-data_train_ind, ]
train.data_labels <- data.subset[data_train_ind, 1]
